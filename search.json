[{"title":"vue之项目打包成apk","url":"/2019/12/15/vue之项目打包成apk/","content":"\n##### 1.第一步（重要）\n\n登录阿里云在远程服务器添加一个4000端口 ***\n\n修改服务器上：C:\\Windows\\System32\\drivers\\etc中的hosts文件\n\n```\n172.24.42.8     localhost\n```\n\n注意：前者：服务器内网     后者：接口运行为：localhost:4000\n\n***在服务器端运行接口：node app(localhost:4000)与第三步对应***\n\n##### 2.第二步\n\n \t修改vue.config.js中的publicPath(解决资源找不到路径问题)\n\n```\n  publicPath: process.env.NODE_ENV === 'production'\n      ? './cli-study/dist'\n      : '/'\n```\n\n##### 3.第三步\n\n打包成app不存在跨域访问的问题\n\n```\n axios.defaults.baseURL = \"http://39.105.27.132:4000\"\n 注意：39.105.27.132是服务器的公网。\n      4000后端接口的端口号\n```\n\n##### 4.第四步\n\n执行 npm run build 打包 成dist\t\n\n##### 5.第五步\n\n打开hbuilder\n\n​    1.文件+新建+移动App（项目名）\n\n​    2.把项目中除了.project 和manifest.json的所有文件删除\n\n​    3.把dist中的文件拷贝到项目中\n\n#####   6.第六步\n\n 配置manifest.json文件\n\n​     修改应用信息\n\n​     修改图标配置\n\n​      修改启动图片\n\n#####   7.第七步\n\n​\t打包发行\n\n​    项目右键+发行\n\n#####   8.第八步\n\n​\t拷贝apk ,安装\n\n\n\n","tags":["项目打包"]},{"title":"vue之使用Apache服务器对项目进行上线","url":"/2019/11/15/vue之使用Apache服务器进行项目上线/","content":"\n##### 1.第一步\n\n项目npm run build 生成dist目录\n\n注意：把mui 中的所有svg注释掉\n\n##### 2.第二步\n\n解压Apache\n\n![img](/img/01/Apache.png) \n\n在Apache的bin目录下执行：httpd -t 查看是否出错\n\n##### 3.第三步（以下均在服务端操作）\n\n修改Apache下的conf下的httpd.conf配置文件\n\n37行 Define SRVROOT \"E:/Apache\"\n\n39行 ServerRoot \"E:/Apache\"\n\n59行 \\#Listen 12.34.56.78:80\n\n60行  Listen 8010\n\n61行   Listen 8020\n\n142行  LoadModule proxy_module modules/mod_proxy.so\n\n151行  LoadModule proxy_http_module modules/mod_proxy_http.so\n\n 225行 ServerName localhost:8888\n\n 233行 Options Indexes FollowSymLinks\n\n  234行 AllowOverride None\n\n  235行 Order allow,deny\n\n  236行 Allow from all\n\n  251行  DocumentRoot \"C:\\\\\"\n\n  252行  <Directory \"C:\\\\\">\n\n##### 4.第四步\n\n​\t把dist中的文件拷贝到E:/webapp中\n\n##### 5.第五步\n\n​    在Apache的bin目录下执行：\n\n​     安装：$ httpd.exe -k install -n \"Apache\"\n\n​\t  卸载：$ httpd.exe -k uninstall -n \"Apache\"\n\n​      Win+R: services.msc启动或停止Apache服务器。\n\n#####   6.第六步\n\n​       在浏览器中输入localhost:8010查看网页显示\n\n#####   7.第七步\n\n​\t\t配置Apache虚拟目录（允许Apache运行多个项目）\n\n​        509行： \\# Virtual hosts\n\n​         510行：Include conf/extra/httpd-vhosts.conf（打开）\n\n#####   8.第八步(配置反向代理)\n\n```\n  <VirtualHost *:8010> \n\n  DocumentRoot \"E:/webapp\"\n\n  <Directory \"E:/webapp\">\n\n​    Options FollowSymLinks Indexes \n\n​    AllowOverride none\n\n​    Require all granted\n\n  </Directory>\n\n  Proxyrequests off\n\n  <Proxy *>\n\n​    \\#规定Deny,Allow的执行顺序, Order Deny,Allow ： 先执行Deny，再执行Allow\n\n​    Order Deny,Allow\n\n​    \\#全部禁止访问 取值：all none 指定ip\n\n​    Allow from All\n</Proxy>\n        #配置反向代理\n\t\tProxyPass /cellphone http://172.24.42.8:4000/cellphone\n\t\tProxyPass /banner http://172.24.42.8:4000/banner\n\t\tProxyPass /user http://172.24.42.8:4000/user\n\t\tProxyPass /like http://172.24.42.8:4000/like\n\t\tProxyPass /likelist http://172.24.42.8:4000/likelist\n\t\tProxyPass /search http://172.24.42.8:4000/search\n\t\tProxyPass /personalized http://172.24.42.8:4000/personalized\n\t\tProxyPass /playlist http://172.24.42.8:4000/playlist\n\t\tProxyPass /lyric http://172.24.42.8:4000/lyric\n\t\tProxyPass /top http://172.24.42.8:4000/top\n\t\tProxyPass /toplist http://172.24.42.8:4000/toplist\n\t\tProxyPass /comment http://172.24.42.8:4000/comment\n\t\tProxyPass /artist http://172.24.42.8:4000/artist\n\t\tProxyPass /artists http://172.24.42.8:4000/artists\n\t\tProxyPass /song http://172.24.42.8:4000/song\n\n</VirtualHost>\n\n<VirtualHost *:8020> \n\n  DocumentRoot \"E:/webapp1\"\n\n  <Directory \"E:/webapp1\">\n\n​    Options FollowSymLinks Indexes \n\n​    AllowOverride none\n\n​    Require all granted\n\n  </Directory>\n\n  Proxyrequests off\n\n  <Proxy *>\n\n​    \\#规定Deny,Allow的执行顺序, Order Deny,Allow ： 先执行Deny，再执行Allow\n\n​    Order Deny,Allow\n\n​    \\#全部禁止访问 取值：all none 指定ip\n\n​    Allow from All\n\n  </Proxy>\n\n​    \\#配置反向代理\n\n  ProxyPass /cats http://api.zhuishushenqi.com/cats\n\n  ProxyPass /book http://api.zhuishushenqi.com/book\n\n  ProxyPass /post http://api.zhuishushenqi.com/post\n\n  ProxyPass /ranking http://api.zhuishushenqi.com/ranking\n\n  ProxyPass /btoc http://api.zhuishushenqi.com/btoc\n\n  ProxyPass /atoc http://api.zhuishushenqi.com/atoc\n\n  ProxyPass /chapter http://chapter2.zhuishushenqi.com/chapter \n</VirtualHost>\n```\n\n注意：\n\n在C:\\Windows\\System32\\drivers\\etc的hosts中添加\n\n​        172.24.42.8(服务器ip)     smallan.top（域名）\n\n#####  9.访问\n\n​\t  smllant.top:8010   smllant.top:8020\n\n#####  10.解决首屏加载比较慢的问题\n\n1.打开 httpd.conf配置文件中下面两个模块的注释\n\n\\#LoadModule deflate_module modules/mod_deflate.so\n\n\\#LoadModule headers_module modules/mod_headers.so\n\n \n\n2.在httpd.conf配置文件最下面添加\n\n<IfModule deflate_module>\n\n  SetOutputFilter DEFLATE\n\n  DeflateCompressionLevel 9\n\n</IfModule>","tags":["上线"]},{"title":"vue之moment和vuex之persistedstate","url":"/2019/09/20/vue之moment和vuex之persistedstate/","content":"\n#### moment作用：时间格式化\n\n##### 1.安装\n\n```\nnpm install moment --save\n```\n\n##### 2.Main.js引入\n\n```\nimport moment from 'moment'\n\n// 定义全局的过滤器\n\nVue.filter('dateFormat', function (dataStr, pattern = \"YYYY-MM-DD HH:mm:ss\") {\n\n return moment(dataStr).format(pattern)\n\n})\n```\n\n##### 3.组件中按需使用\n\n```\nitem.time | dateFormat('mm:ss')\n```\n\n\n\n#### vuex-persistedstate：解决刷新数据消失的问题\n\n#####  1. 安装\n\n```\nnpm install vuex-persiste\n```\n\ndstate --savepersisitedstatepp\n\n##### 2. 引入及配置\n\n```\nimport createPersistedState from \"vuex-persistedstate\"\n\nconst store = new Vuex.Store({\n\n // ...\n\n plugins: [createPersistedState()]\n\n})\n```\n\n","tags":["vue"]},{"title":"vuex之四个辅助函数的使用","url":"/2019/09/18/vuex之四个辅助函数的使用/","content":"\n##### 1.在Store (Index.js)中定义state,mutations,actions和getters\n\n```\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedstate from 'vuex-persistedstate'\n\nVue.use(Vuex)\nexport default new Vuex.Store({\n  state: {\n    playList: [],\n  \n  },\n  mutations: {    \n    setPlayList(state, list) {\n      state.playList = list\n    },\n  },\n  actions: {\n    selectPlay({commit, state}, {list, index}){\n      commit('setSequenceList', list)\n      commit('setPlayList', list)\n      commit('setCurrentIndex',index)\n      commit('setPlayState', true)\n    }\n  },\n  getters: {\n    playList: function (state) {\n      return state.playList\n    },\n   \n})\n```\n\n##### 2.页面引入\n\n```\nimport { mapGetters, mapMutations, mapActions,mapState } from \"vuex\";\nexport default {\n  computed: {\n    ...mapGetters([\n      \"playList\",  \n]),\nmethods: {\n    ...mapMutations({\n       setPlayList: \"setPlayList\"\n    }),\n    ...mapActions([\"selectPlay\"])\n  },\n}\n```\n\n#####  3.页面直接使用\n\n```\nthis.playList\nthis.setPlayList(songlist);\nthis.selectPlay({\n          list: this.recommondLists,\n          index\n        })\n    },\n```\n\n```\n...mapGetters和mapState在computed中使用\n...mapAction和mapMutation 在methods中使用\n```\n\n","tags":["vuex"]},{"title":"vue之v-for列表实现active样式切换","url":"/2019/09/15/vue之v-for列表实现active样式的切换/","content":"\n##### v-for列表实现active 样式切换\n\n```\n<template>\n  <div class=\"page-navbar\">\n    <ul>\n      <li\n        v-for=\"(item,index) in musicTypes\"\n        :key=\"index\"\n        @click=\"addClass(index)\"\n        :class=\"{ bgColors:index==current}\"\n      >{{item.name}}</li>\n    </ul>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      current: 0,\n      musicTypes: [\n        {\n          name: \"华语\",\n          code: 1001,\n          id: 1\n        },\n        {\n          name: \"欧美\",\n          code: 2002,\n          id: 2\n        },\n        {\n          name: \"韩国\",\n          code: 7001,\n          id: 3\n        },\n        {\n          name: \"日本\",\n          code: 6002,\n          id: 4\n        }\n      ]\n    };\n  },\n  methods: {\n    addClass: function(index) {\n      this.current = index;\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n// 地区分类\nul {\n  z-index: 2000;\n\n  width: 100%;\n  height: 40px;\n  line-height: 40px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.5);\n  li {\n    list-style: none;\n    float: left;\n    margin-left: 20px;\n    font-size: 16px;\n    color: rgba(255, 255, 255, 0.5);\n  }\n}\n.bgColors {\n  color: #ff5700 !important;\n}\n.ul a {\n  font-size: 16px;\n}\n</style>\n```\n\n##### 结果为\n\n![img](/img/01/active1.png) ","tags":["vue"]},{"title":"React之使用Apache服务器进行项目上线","url":"/2019/05/15/React之使用Apache服务器进行项目上线 /","content":"\n##### 1.第一步\n\n在package.json里加 \"homepage\":\".\" （否则路径会发生错误）\n\n项目npm run build 生成build目录\n\n##### 2.第二步\n\n解压Apache\n\n![img](/img/01/Apache.png) \n\n在Apache的bin目录下执行：httpd -t 查看是否出错\n\n##### 3.第三步（以下均在服务器端操作）\n\n修改Apache下的conf下的httpd.conf配置文件\n\n37行 Define SRVROOT \"E:/Apache\"\n\n39行 ServerRoot \"E:/Apache\"\n\n59行 \\#Listen 12.34.56.78:80\n\n60行  Listen 8030\n\n142行  LoadModule proxy_module modules/mod_proxy.so\n\n151行  LoadModule proxy_http_module modules/mod_proxy_http.so\n\n 225行 ServerName localhost:8888\n\n 233行 Options Indexes FollowSymLinks\n\n  234行 AllowOverride None\n\n  235行 Order allow,deny\n\n  236行 Allow from all\n\n  251行  DocumentRoot \"C:\\\\\"\n\n  252行  <Directory \"C:\\\\\">\n\n##### 4.第四步\n\n​\t把build中的文件拷贝到E:/webapp中\n\n##### 5.第五步\n\n​    在Apache的bin目录下执行：\n\n​     安装：$ httpd.exe -k install -n \"Apache\"\n\n​\t  卸载：$ httpd.exe -k uninstall -n \"Apache\"\n\n​      Win+R: services.msc启动或停止Apache服务器。\n\n#####   6.第六步\n\n​       在浏览器中输入localhost:8030查看网页显示\n\n#####   7.第七步(可允许多个项目)\n\n​\t\t配置Apache虚拟目录（允许Apache运行多个项目）\n\n​        509行： \\# Virtual hosts\n\n​         510行：Include conf/extra/httpd-vhosts.conf（打开）\n\n#####   8.第八步(配置反向代理)\n\n```\n  <VirtualHost *:8030> \n    DocumentRoot \"C:/webapp3\"\n\t<Directory \"C:/webapp3\">\n\t\tOptions FollowSymLinks Indexes \n\t\tAllowOverride none\n\t\tRequire all granted\n\t</Directory>\n\tProxyrequests off\n\t<Proxy *>\n\t\t#规定Deny,Allow的执行顺序, Order Deny,Allow ： 先执行Deny，再执行Allow\n        Order Deny,Allow\n        #全部禁止访问 取值：all none 指定ip\n        Allow from All\n\t</Proxy>\n        #配置反向代理\n\t\tProxyPass /api http://172.24.42.8:3001/api     (服务器ip)\n\t\tProxyPass /IPShare http://ip.360.cn/IPShare\t\n</VirtualHost>\n\n```\n\n注意：\n\n在C:\\Windows\\System32\\drivers\\etc的hosts中添加\n\n​             172.24.42.8(服务器ip)     smallan.top（域名）\n\n#####  9.访问\n\n​\t         smllant.top:8030\n\n","tags":["上线"]},{"title":"css之浮动的定义及清除浮动的方法","url":"/2017/10/10/css之浮动的定义以及清除浮动的方法/","content":"\n#####   1.浮动的定义\n\n定义：使元素脱离文档流，按照指定的方向发生移动，遇到父级的边界或者相邻的浮动元素就会停下来.\n\n浮动的目的：为了达到自己的布局目的，让指定元素定位在指定位置，并且可以设置浮动后的行级元素的宽高，我们就需要用到浮动\n\n##### 2.为什么要清除浮动\n\n   清除浮动主要是为了解决，父元素因为子级元素浮动引起的内部高度为0的问题\n\n   原因：当父元素不给高度的时候，内部元素不浮动时会撑开，而浮动的时候，父元素变成一条线。\n\n##### 3.清除浮动的常用方法\n\n   （1）加空div（在最后一个浮动标签后，新加一个标签，给其设置clear：both；）（不推荐）\n\n```\n<div class=\"fahter\">\n      <div class=\"big\">big</div>\n      <div class=\"small\">small</div>\n      <div class=\"clear\">额外标签法</div>\n </div>\n```\n\n   （2）父级添加overflow属性（父元素添加overflow:hidden）（不推荐）\n\n```html\n .fahter{   \n   width: 400px; \n   border: 1px solid deeppink;\n   overflow: hidden;  \n}\n```\n\n  （3）父级使用after伪元素清除浮动（推荐使用）\n\n```html\n .clearfix:after{/*伪元素是行内元素 正常浏览器清除浮动方法*/\n        content: \"\";\n        display: block;\n        height: 0;\n        clear:both;\n        visibility: hidden;\n    }\n```\n\n  （4）使用before和after双伪元素清除浮动\n\n```html\n  .clearfix:after,.clearfix:before{\n        content: \"\";\n        display: table;\n    }\n    .clearfix:after{\n        clear: both;\n    }\n    .clearfix{\n        *zoom: 1;\n    }\n \n <div class=\"fahter clearfix\">\n        <div class=\"big\">big</div>\n        <div class=\"small\">small</div>\n    </div>\n    <div class=\"footer\"></div>\n```","tags":["css"]},{"title":"css之BFC的定义及其作用","url":"/2017/10/08/css之BFC的定义以及其作用/","content":"\n#####   1.BFC的定义\n\n​    BFC即 Block Formatting Contexts (块级格式化上下文)， 是 [W3C](https://www.leiue.com/tags/w3c) [CSS](https://www.leiue.com/tags/css)2.1 规范中的一个概念。它是页面中的一块渲染区域，并且有一套渲染规则，它决定了其子元素将如何定位，以及和其他元素的关系和相互作用。\n\n##### 2.BFC的创建\n\n1. 根元素或其它包含它的元素\n2. 浮动元素 (元素的 float 不是 none)\n3. 绝对定位元素 (元素具有 position 为 absolute 或 fixed)\n4. 内联块 (元素具有 display: inline-block)\n5. 表格单元格 (元素具有 display: table-cell，HTML表格单元格默认属性)\n6. 表格标题 (元素具有 display: table-caption, HTML表格标题默认属性)\n7. 具有overflow 且值不是 visible 的块元素，\n8. display: flow-root\n9. column-span: all 应当总是会创建一个新的格式化上下文，即便具有 column-span: all 的元素并不被包裹在一个多列容器中。\n10. 一个块格式化上下文包括创建它的元素内部所有内容，除了被包含于创建新的块级格式化上下文的后代元素内的元素。\n\n##### 3.BFC布局规则\n\n   1.内部的Box会在垂直方向，一个接一个的放置\n   2.Box的垂直方向的距离由margin决定，属于同一个BFC的两个相邻的Box会重叠\n   3.BFC的区域不会与float box重叠（定位情况除外）\n   4.计算BFC的高度时，浮动元素也参与计算\n   5.BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此\n\n#####  4.BFC作用：\n\n1、解决 margin 塌陷问题\n\n​      margin塌陷问题：在标准文档流中，块级标签之间竖直方向的margin会以大的为准\n\n```\n<head>\ndiv{\n    width: 100px;\n    height: 100px;\n    background: lightblue;\n    margin: 100px;\n}\n</head>\n<body>\n    <div></div>\n    <div></div>\n</body>\n注意：两个div竖直之间的距离为100px\n```\n\n如果想要避免外边距的重叠，可以将其放在不同的 BFC 容器中\n\n```\n <div class=\"container\">\n    <p></p>\n </div>\n <div class=\"container\">\n    <p></p>\n </div>\n \n \n .container {\n    overflow: hidden;\n}\np {\n    width: 100px;\n    height: 100px;\n    background: lightblue;\n    margin: 100px;\n} \n    \n```\n\n2、避免浮动元素和其他元素重叠\n\n​     div浮动兄弟遮盖问题：左侧块级元素发生了浮动，所以和右侧未发生浮动的块级元素不在同一层内，所以会发生左边div遮挡下面的div。可以给下面div加 overflow: hidden，触发bfc来解决遮挡问题。 \n\n3、清除浮动\n\n```\n.fahter{   \n   width: 400px; \n   border: 1px solid deeppink;\n   overflow: hidden;  \n}\n```","tags":["css"]},{"title":"动画demo通过github访问","url":"/2016/11/20/动画demo通过github搭建访问/","content":"\n#### **1.**  新建一个远程仓库\n\n![img](/img/01/wps1.jpg) \n\n#### 2. 在animations仓库setting中随意选择一个主题\n\n![img](/img/01/wps2.jpg) \n\n#### 3. 通过仓库的首页\n\n   通过 https://smallantcxq.github.io/animations/可访问：\n\n![img](/img/01/wps3.jpg) \n\n\n\n如下：\n\n![img](/img/01/wps4.jpg) \n\n#### 4. 在本地创建文件夹空文件夹（animat）映射仓库\n\n 在animat中打开git Bash命令行\n\ngit clone git@github.com:smallAntcxq/animations.git\n\n#### 5. 删除animat中的除.git文件外的所有文件(.git为隐藏文件)\n\n在此路径下执行\n\n$ git add *\n\n$ git commit -m 'del'\n\n$ git push origin master\n\n这时执行 https://smallantcxq.github.io/animations/显示404\n\n#### 6. 在animations中加入想要展示的页面\n\n![img](/img/01/wps5.jpg) \n\n执行：\n\n$ git add *\n\n$ git commit -m 'del'\n\n$ git push origin master\n\n#### 7. 结果为：\n\n![img](/img/01/wps6.jpg)\n\n#### 8. 这时通过以下可访问\n\nhttps://smallantcxq.github.io/animations/3d.html\n\nhttps://smallantcxq.github.io/animations/sky.html\n\nhttps://smallantcxq.github.io/animations/game.html","tags":["搭建步骤"]}]