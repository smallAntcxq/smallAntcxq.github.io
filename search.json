[{"title":"vue之moment和vuex之persistedstate","url":"/2019/09/20/vue之moment和vuex之persistedstate/","content":"\n#### moment作用：时间格式化\n\n##### 1.安装\n\nnpm install moment --save\n\n##### 2.Main.js引入\n\nimport moment from 'moment'\n\n// 定义全局的过滤器\n\nVue.filter('dateFormat', function (dataStr, pattern = \"YYYY-MM-DD HH:mm:ss\") {\n\n return moment(dataStr).format(pattern)\n\n})\n\n##### 3.组件中按需使用\n\n item.time | dateFormat('mm:ss')\n\n\n\n#### vuex-persistedstate：解决刷新数据消失的问题\n\n#####  1. 安装\n\nnpm install vuex-persistedstate --savepersisitedstatepp\n\n##### 2. 引入及配置\n\nimport createPersistedState from \"vuex-persistedstate\"\n\nconst store = new Vuex.Store({\n\n // ...\n\n plugins: [createPersistedState()]\n\n})","tags":["vue"]},{"title":"动画demo通过github访问","url":"/2019/09/18/vuex辅助函数的使用/","content":"\n##### ...mapGetters和mapState在computed中使用\n\n##### ...mapAction和mapMutation 在methods中使用\n\n \n\n##### **1.在Store (Index.js)中**\n\nimport Vue from 'vue'\n\nimport Vuex from 'vuex'\n\nimport createPersistedstate from 'vuex-persistedstate'\n\nimport { Config } from '../common/js/config'\n\n \n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n\n state: {\n\n  playList: [],\n\n \n\n },\n\n mutations: {  \n\n  setPlayList(state, list) {\n\n   state.playList = list\n\n  },\n\n },\n\n actions: {\n\n  selectPlay({commit, state}, {list, index}){\n\n   commit('setSequenceList', list)\n\n   commit('setPlayList', list)\n\n   commit('setCurrentIndex',index)\n\n   commit('setPlayState', true)\n\n  }\n\n },\n\n getters: {\n\n  playList: function (state) {\n\n   return state.playList\n\n  }, \n\n})\n\n \n\n##### **2.****页面**\n\nimport { mapGetters, mapMutations, mapActions,mapState } from \"vuex\";\n\nexport default {\n\n computed: {\n\n  ...mapGetters([\n\n   \"playList\", \n\n]),\n\nmethods: {\n\n  ...mapMutations({\n\n​    setPlayList: \"setPlayList\"\n\n  }),\n\n  ...mapActions([\"selectPlay\"])\n\n },\n\n}\n\n \n\n#####  // 直接使用\n\nthis.playList\n\nthis.setPlayList(songlist);\n\nthis.selectPlay({\n\n​     list: this.recommondLists,\n\n​     index\n\n​    })\n\n  },\n\n ","tags":["vuex"]},{"title":"动画demo通过github访问","url":"/2016/11/20/动画demo通过github访问/","content":"\n#### **1.**  新建一个远程仓库\n\n![img](/img/01/wps1.jpg) \n\n#### 2. 在animations仓库setting中随意选择一个主题\n\n![img](/img/01/wps2.jpg) \n\n#### 3. 通过仓库的首页\n\n   通过 https://smallantcxq.github.io/animations/可访问：\n\n![img](/img/01/wps3.jpg) \n\n\n\n如下：\n\n![img](/img/01/wps4.jpg) \n\n#### 4. 在本地创建文件夹空文件夹（animat）映射仓库\n\n 在animat中打开git Bash命令行\n\ngit clone git@github.com:smallAntcxq/animations.git\n\n#### 5. 删除animat中的除.git文件外的所有文件(.git为隐藏文件)\n\n在此路径下执行\n\n$ git add *\n\n$ git commit -m 'del'\n\n$ git push origin master\n\n这时执行 https://smallantcxq.github.io/animations/显示404\n\n#### 6. 在animations中加入想要展示的页面\n\n![img](/img/01/wps5.jpg) \n\n执行：\n\n$ git add *\n\n$ git commit -m 'del'\n\n$ git push origin master\n\n#### 7. 结果为：\n\n![img](/img/01/wps6.jpg)\n\n#### 8. 这时通过以下可访问\n\nhttps://smallantcxq.github.io/animations/3d.html\n\nhttps://smallantcxq.github.io/animations/sky.html\n\nhttps://smallantcxq.github.io/animations/game.html","tags":["搭建步骤"]}]