[{"title":"vue之moment和vuex之persistedstate","url":"/2019/09/20/vue之moment和vuex之persistedstate/","content":"\n#### moment作用：时间格式化\n\n##### 1.安装\n\n```\nnpm install moment --save\n```\n\n##### 2.Main.js引入\n\n```\nimport moment from 'moment'\n\n// 定义全局的过滤器\n\nVue.filter('dateFormat', function (dataStr, pattern = \"YYYY-MM-DD HH:mm:ss\") {\n\n return moment(dataStr).format(pattern)\n\n})\n```\n\n##### 3.组件中按需使用\n\n```\nitem.time | dateFormat('mm:ss')\n```\n\n\n\n#### vuex-persistedstate：解决刷新数据消失的问题\n\n#####  1. 安装\n\n```\nnpm install vuex-persiste\n```\n\ndstate --savepersisitedstatepp\n\n##### 2. 引入及配置\n\n```\nimport createPersistedState from \"vuex-persistedstate\"\n\nconst store = new Vuex.Store({\n\n // ...\n\n plugins: [createPersistedState()]\n\n})\n```\n\n","tags":["vue"]},{"title":"vuex之四个辅助函数的使用","url":"/2019/09/18/vuex之四个辅助函数的使用/","content":"\n##### 1.在Store (Index.js)中定义state,mutations,actions和getters\n\n```\nimport Vue from 'vue'\nimport Vuex from 'vuex'\nimport createPersistedstate from 'vuex-persistedstate'\n\nVue.use(Vuex)\nexport default new Vuex.Store({\n  state: {\n    playList: [],\n  \n  },\n  mutations: {    \n    setPlayList(state, list) {\n      state.playList = list\n    },\n  },\n  actions: {\n    selectPlay({commit, state}, {list, index}){\n      commit('setSequenceList', list)\n      commit('setPlayList', list)\n      commit('setCurrentIndex',index)\n      commit('setPlayState', true)\n    }\n  },\n  getters: {\n    playList: function (state) {\n      return state.playList\n    },\n   \n})\n```\n\n##### 2.页面引入\n\n```\nimport { mapGetters, mapMutations, mapActions,mapState } from \"vuex\";\nexport default {\n  computed: {\n    ...mapGetters([\n      \"playList\",  \n]),\nmethods: {\n    ...mapMutations({\n       setPlayList: \"setPlayList\"\n    }),\n    ...mapActions([\"selectPlay\"])\n  },\n}\n```\n\n#####  3.页面直接使用\n\n```\nthis.playList\nthis.setPlayList(songlist);\nthis.selectPlay({\n          list: this.recommondLists,\n          index\n        })\n    },\n```\n\n```\n...mapGetters和mapState在computed中使用\n...mapAction和mapMutation 在methods中使用\n```\n\n","tags":["vuex"]},{"title":"vue之v-for列表实现active样式切换","url":"/2019/09/15/vue之v-for列表实现active样式的切换/","content":"\n##### v-for列表实现active 样式切换\n\n```\n<template>\n  <div class=\"page-navbar\">\n    <ul>\n      <li\n        v-for=\"(item,index) in musicTypes\"\n        :key=\"index\"\n        @click=\"addClass(index)\"\n        :class=\"{ bgColors:index==current}\"\n      >{{item.name}}</li>\n    </ul>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      current: 0,\n      musicTypes: [\n        {\n          name: \"华语\",\n          code: 1001,\n          id: 1\n        },\n        {\n          name: \"欧美\",\n          code: 2002,\n          id: 2\n        },\n        {\n          name: \"韩国\",\n          code: 7001,\n          id: 3\n        },\n        {\n          name: \"日本\",\n          code: 6002,\n          id: 4\n        }\n      ]\n    };\n  },\n  methods: {\n    addClass: function(index) {\n      this.current = index;\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n// 地区分类\nul {\n  z-index: 2000;\n\n  width: 100%;\n  height: 40px;\n  line-height: 40px;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.5);\n  li {\n    list-style: none;\n    float: left;\n    margin-left: 20px;\n    font-size: 16px;\n    color: rgba(255, 255, 255, 0.5);\n  }\n}\n.bgColors {\n  color: #ff5700 !important;\n}\n.ul a {\n  font-size: 16px;\n}\n</style>\n```\n\n##### 结果为\n\n![img](/img/01/active1.png) ","tags":["vue"]},{"title":"动画demo通过github访问","url":"/2016/11/20/动画demo通过github搭建访问/","content":"\n#### **1.**  新建一个远程仓库\n\n![img](/img/01/wps1.jpg) \n\n#### 2. 在animations仓库setting中随意选择一个主题\n\n![img](/img/01/wps2.jpg) \n\n#### 3. 通过仓库的首页\n\n   通过 https://smallantcxq.github.io/animations/可访问：\n\n![img](/img/01/wps3.jpg) \n\n\n\n如下：\n\n![img](/img/01/wps4.jpg) \n\n#### 4. 在本地创建文件夹空文件夹（animat）映射仓库\n\n 在animat中打开git Bash命令行\n\ngit clone git@github.com:smallAntcxq/animations.git\n\n#### 5. 删除animat中的除.git文件外的所有文件(.git为隐藏文件)\n\n在此路径下执行\n\n$ git add *\n\n$ git commit -m 'del'\n\n$ git push origin master\n\n这时执行 https://smallantcxq.github.io/animations/显示404\n\n#### 6. 在animations中加入想要展示的页面\n\n![img](/img/01/wps5.jpg) \n\n执行：\n\n$ git add *\n\n$ git commit -m 'del'\n\n$ git push origin master\n\n#### 7. 结果为：\n\n![img](/img/01/wps6.jpg)\n\n#### 8. 这时通过以下可访问\n\nhttps://smallantcxq.github.io/animations/3d.html\n\nhttps://smallantcxq.github.io/animations/sky.html\n\nhttps://smallantcxq.github.io/animations/game.html","tags":["搭建步骤"]}]